// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package registers_pkg;

    localparam REGISTERS_DATA_WIDTH = 32;
    localparam REGISTERS_MIN_ADDR_WIDTH = 7;

    typedef struct {
        logic [31:0] next;
    } registers__ENCRYPTED_0__DATA__in_t;

    typedef struct {
        registers__ENCRYPTED_0__DATA__in_t DATA;
    } registers__ENCRYPTED_0__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__ENCRYPTED_1__DATA__in_t;

    typedef struct {
        registers__ENCRYPTED_1__DATA__in_t DATA;
    } registers__ENCRYPTED_1__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__ENCRYPTED_2__DATA__in_t;

    typedef struct {
        registers__ENCRYPTED_2__DATA__in_t DATA;
    } registers__ENCRYPTED_2__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__ENCRYPTED_3__DATA__in_t;

    typedef struct {
        registers__ENCRYPTED_3__DATA__in_t DATA;
    } registers__ENCRYPTED_3__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__DECRYPTED_0__DATA__in_t;

    typedef struct {
        registers__DECRYPTED_0__DATA__in_t DATA;
    } registers__DECRYPTED_0__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__DECRYPTED_1__DATA__in_t;

    typedef struct {
        registers__DECRYPTED_1__DATA__in_t DATA;
    } registers__DECRYPTED_1__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__DECRYPTED_2__DATA__in_t;

    typedef struct {
        registers__DECRYPTED_2__DATA__in_t DATA;
    } registers__DECRYPTED_2__in_t;

    typedef struct {
        logic [31:0] next;
    } registers__DECRYPTED_3__DATA__in_t;

    typedef struct {
        registers__DECRYPTED_3__DATA__in_t DATA;
    } registers__DECRYPTED_3__in_t;

    typedef struct {
        registers__ENCRYPTED_0__in_t ENCRYPTED_0;
        registers__ENCRYPTED_1__in_t ENCRYPTED_1;
        registers__ENCRYPTED_2__in_t ENCRYPTED_2;
        registers__ENCRYPTED_3__in_t ENCRYPTED_3;
        registers__DECRYPTED_0__in_t DECRYPTED_0;
        registers__DECRYPTED_1__in_t DECRYPTED_1;
        registers__DECRYPTED_2__in_t DECRYPTED_2;
        registers__DECRYPTED_3__in_t DECRYPTED_3;
    } registers__in_t;

    typedef struct {
        logic [31:0] value;
    } registers__KEY_0__DATA__out_t;

    typedef struct {
        registers__KEY_0__DATA__out_t DATA;
    } registers__KEY_0__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__KEY_1__DATA__out_t;

    typedef struct {
        registers__KEY_1__DATA__out_t DATA;
    } registers__KEY_1__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__KEY_2__DATA__out_t;

    typedef struct {
        registers__KEY_2__DATA__out_t DATA;
    } registers__KEY_2__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__KEY_3__DATA__out_t;

    typedef struct {
        registers__KEY_3__DATA__out_t DATA;
    } registers__KEY_3__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__I_TEXT_0__DATA__out_t;

    typedef struct {
        registers__I_TEXT_0__DATA__out_t DATA;
    } registers__I_TEXT_0__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__I_TEXT_1__DATA__out_t;

    typedef struct {
        registers__I_TEXT_1__DATA__out_t DATA;
    } registers__I_TEXT_1__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__I_TEXT_2__DATA__out_t;

    typedef struct {
        registers__I_TEXT_2__DATA__out_t DATA;
    } registers__I_TEXT_2__out_t;

    typedef struct {
        logic [31:0] value;
    } registers__I_TEXT_3__DATA__out_t;

    typedef struct {
        registers__I_TEXT_3__DATA__out_t DATA;
    } registers__I_TEXT_3__out_t;

    typedef struct {
        registers__KEY_0__out_t KEY_0;
        registers__KEY_1__out_t KEY_1;
        registers__KEY_2__out_t KEY_2;
        registers__KEY_3__out_t KEY_3;
        registers__I_TEXT_0__out_t I_TEXT_0;
        registers__I_TEXT_1__out_t I_TEXT_1;
        registers__I_TEXT_2__out_t I_TEXT_2;
        registers__I_TEXT_3__out_t I_TEXT_3;
    } registers__out_t;
endpackage
